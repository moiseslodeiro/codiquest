import{s as _,n as j}from"./scheduler.38f5b73a.js";import{S as z,i as g,r as h,u as x,v as $,d as C,t as M,w as k,g as w,s as q,h as p,x as m,c as f,k as y,a as i,f as r}from"./index.33e8e8ec.js";import{P}from"./File.svelte_svelte_type_style_lang.e9c0277e.js";import"./paths.e092a00d.js";function S(d){let e,l="Hagamos un peque√±o repaso de este m√≥dulo, que ha sido intenso:",t,s,n='<li class="svelte-1awqwjz">Si quieres crear un nuevo m√≥dulo haciendo uso de Markdown, crea tu fichero Markdown (con extensi√≥n <code class="svelte-1awqwjz">.md</code>).<ul class="svelte-1awqwjz"><li class="svelte-1awqwjz">Separa cada secci√≥n con <code class="svelte-1awqwjz">#</code>, respetando que la primera secci√≥n sea la descripci√≥n del m√≥dulo.</li> <li class="svelte-1awqwjz">Usa Markdown b√°sico y con bloques extendidos.</li> <li class="svelte-1awqwjz">Convierte el c√≥digo con <code class="svelte-1awqwjz">node tools/module.js &lt;tufichero.md&gt; &lt;tuModulo&gt;</code>.<ul class="svelte-1awqwjz"><li class="svelte-1awqwjz">Puedes usarlo cuantas veces quieras, que solo cambiar√° el contenido del m√≥dulo, no el m√≥dulo en s√≠ ni las preguntas.</li></ul></li></ul></li> <li class="svelte-1awqwjz">Si quieres a√±adir preguntas al m√≥dulo (exista o no), puedes hacer uso de otro fichero Markdown con el contenido que se ha explicado anteriormente.<ul class="svelte-1awqwjz"><li class="svelte-1awqwjz">Separa las secciones/preguntas con <code class="svelte-1awqwjz">---</code>.</li> <li class="svelte-1awqwjz">Pon preguntas de tipo respuesta simple, m√∫ltiple o de rellenar huecos.</li> <li class="svelte-1awqwjz">Convierte las preguntas en c√≥digo con <code class="svelte-1awqwjz">node tools/convert.js &lt;tufichero.md&gt; &lt;tuModulo&gt;</code>.<ul class="svelte-1awqwjz"><li class="svelte-1awqwjz">Esto crear√° el m√≥dulo en caso de que no exista.</li></ul></li></ul></li>',u,o,v="Con todo esto, ya tendremos nuestro m√≥dulo funcionando y automatizado con Markdown. ¬øNo es maravilloso? ü§∏‚Äç‚ôÇÔ∏è";return{c(){e=w("p"),e.textContent=l,t=q(),s=w("ul"),s.innerHTML=n,u=q(),o=w("p"),o.textContent=v,this.h()},l(a){e=p(a,"P",{"data-svelte-h":!0}),m(e)!=="svelte-tltwuu"&&(e.textContent=l),t=f(a),s=p(a,"UL",{class:!0,"data-svelte-h":!0}),m(s)!=="svelte-orx918"&&(s.innerHTML=n),u=f(a),o=p(a,"P",{"data-svelte-h":!0}),m(o)!=="svelte-12jq0rq"&&(o.textContent=v),this.h()},h(){y(s,"class","svelte-1awqwjz")},m(a,c){i(a,e,c),i(a,t,c),i(a,s,c),i(a,u,c),i(a,o,c)},p:j,d(a){a&&(r(e),r(t),r(s),r(u),r(o))}}}function b(d){let e,l;return e=new P({props:{$$slots:{default:[S]},$$scope:{ctx:d}}}),{c(){h(e.$$.fragment)},l(t){x(e.$$.fragment,t)},m(t,s){$(e,t,s),l=!0},p(t,[s]){const n={};s&1&&(n.$$scope={dirty:s,ctx:t}),e.$set(n)},i(t){l||(C(e.$$.fragment,t),l=!0)},o(t){M(e.$$.fragment,t),l=!1},d(t){k(e,t)}}}class E extends z{constructor(e){super(),g(this,e,null,b,_,{})}}export{E as default};
