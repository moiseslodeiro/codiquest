import{s as $e}from"./scheduler.38f5b73a.js";import{S as qe,i as _e,r as k,u as E,v as I,d as O,t as D,w as N,g as i,s as r,h as u,x as d,c,j as fe,f as s,k as ee,a,m as te,n as se}from"./index.33e8e8ec.js";import{C as je}from"./Code.7e3a14be.js";import{M as we}from"./Message.3e138e3b.js";import{M as ge}from"./ModalImage.d84ad5a6.js";import{P as be}from"./File.svelte_svelte_type_style_lang.e9c0277e.js";import{b as ze}from"./paths.e092a00d.js";function xe(p){let l;return{c(){l=te(`export const moduleInfo = {
  title: 'Instalando Codiquest',
  shortDescription: 'Este es mi módulo de ejemplo, de momento un poco vacío, ¿no?',
  public: true,
  linksTo: 'dummy'
};

export const levels = [{}];
export const questions = []
`)},l(o){l=se(o,`export const moduleInfo = {
  title: 'Instalando Codiquest',
  shortDescription: 'Este es mi módulo de ejemplo, de momento un poco vacío, ¿no?',
  public: true,
  linksTo: 'dummy'
};

export const levels = [{}];
export const questions = []
`)},m(o,n){a(o,l,n)},d(o){o&&s(l)}}}function Me(p){let l;return{c(){l=te("Puedes cambiar la descripción y el título si quieres. Para el ejemplo, hemos quitado el módulo de Documentación.")},l(o){l=se(o,"Puedes cambiar la descripción y el título si quieres. Para el ejemplo, hemos quitado el módulo de Documentación.")},m(o,n){a(o,l,n)},d(o){o&&s(l)}}}function Te(p){let l;return{c(){l=te("El primer elemento del array no es un nivel en sí, sino que se toma como la descripción del módulo (lo que se verá en la cabecera).")},l(o){l=se(o,"El primer elemento del array no es un nivel en sí, sino que se toma como la descripción del módulo (lo que se verá en la cabecera).")},m(o,n){a(o,l,n)},d(o){o&&s(l)}}}function Ce(p){let l,o=`Hay varias formas de crear un módulo. Empezaremos por la forma manual para que luego puedas entender cómo funciona la creación <a href="${ze}/modules_auto" class="link link-primary internal">automática</a> a partir de otros medios, como la conversión de Markdown a módulos. Para ilustrarlo, vamos a crear un módulo llamado <code class="svelte-1awqwjz">dummy</code>. <em>¡Allé voy!</em>`,n,m,h="Pasos a seguir",U,v,le='<li class="svelte-1awqwjz">Genera el fichero <code class="svelte-1awqwjz">src/modules/dummy.js</code>. # O el nombre que quieras darle a tu nuevo módulo 😊</li> <li class="svelte-1awqwjz">Exporta, al menos, tres elementos: <code class="svelte-1awqwjz">moduleInfo</code>, <code class="svelte-1awqwjz">levels</code> y <code class="svelte-1awqwjz">questions</code>.</li>',A,_,ae="Ejemplo de cómo debería verse tu fichero:",S,f,H,w,B,j,oe='Aunque sea básico, si ya tenías en ejecución tu entorno de desarrollo y pruebas con <code class="svelte-1awqwjz">npm run dev</code>, deberías ver tu nuevo módulo en la pantalla principal, e incluso podrás entrar en él, aunque lo encontrarás vacío. ¿No es maravilloso?',K,g,Q,y,R,b,ne='Valores de <code class="svelte-1awqwjz">moduleInfo</code>',V,z,ie='El objeto <code class="svelte-1awqwjz">moduleInfo</code> describe los metadatos de cada curso. Sus campos habituales son:',G,$,re='<li class="svelte-1awqwjz"><strong>title</strong>: nombre visible del módulo.</li> <li class="svelte-1awqwjz"><strong>shortDescription</strong>: pequeño resumen que se muestra en las tarjetas.</li> <li class="svelte-1awqwjz"><strong>linksTo</strong>: ruta donde se publica el módulo (<strong>debe</strong> coincidir con el nombre de tu módulo (en este caso de ejemplo, <code class="svelte-1awqwjz">dummy</code>)).</li> <li class="svelte-1awqwjz"><strong>public</strong>: cuando es <code class="svelte-1awqwjz">true</code>, el módulo aparece en el listado general; si es <code class="svelte-1awqwjz">false</code>, la página existe, pero no se enlaza públicamente (¡aunque sigue siendo accesible!).</li> <li class="svelte-1awqwjz"><strong>image</strong> e <strong>icon</strong>: archivos opcionales (con base en la carpeta <code class="svelte-1awqwjz">static</code>) para ilustrar el curso.</li> <li class="svelte-1awqwjz"><strong>tags</strong>: lista de etiquetas para clasificar y tener una idea visual de de qué se trata.</li> <li class="svelte-1awqwjz"><strong>isNew</strong>: indica que el módulo es reciente.</li>',F,x,ue='Constante <code class="svelte-1awqwjz">levels</code>',J,M,ce='De momento, no entraremos mucho en materia; solo diremos que <code class="svelte-1awqwjz">levels</code> contendrá un listado de los <strong>niveles a visitar</strong> (lecciones del módulo). Hablando en términos técnicos, es un array de objetos <code class="svelte-1awqwjz">clave:valor</code>, donde la clave define el tipo de contenido que se mostrará (un HTML simple, una página, una prueba de rellenar huecos, un cuestionario, etc.).',W,L,q,X,T,me='Constante <code class="svelte-1awqwjz">questions</code>',Y,C,de='Como mencionábamos en la lección anterior, vamos a disponer de una constante <code class="svelte-1awqwjz">questions</code> que nos servirá para almacenar preguntas a modo de cuestionario. Estas preguntas son independientes, pero también puedes crear preguntas de tipo cuestionario e incluirlas como un nivel más. Más adelante, entraremos en detalle.',Z;return f=new je({props:{codeLang:"js",$$slots:{default:[xe]},$$scope:{ctx:p}}}),w=new we({props:{type:"TIP",$$slots:{default:[Me]},$$scope:{ctx:p}}}),g=new ge({props:{src:"img/install/01.png",alignment:"center",width:"w-2/3",alt:"Visualización de nuestro módulo dummy en Codiquest",modal:"false"}}),q=new we({props:{type:"IMPORTANT",$$slots:{default:[Te]},$$scope:{ctx:p}}}),{c(){l=i("p"),l.innerHTML=o,n=r(),m=i("h2"),m.textContent=h,U=r(),v=i("ol"),v.innerHTML=le,A=r(),_=i("p"),_.textContent=ae,S=r(),k(f.$$.fragment),H=i("blockquote"),k(w.$$.fragment),B=r(),j=i("p"),j.innerHTML=oe,K=r(),k(g.$$.fragment),Q=r(),y=i("hr"),R=r(),b=i("h3"),b.innerHTML=ne,V=r(),z=i("p"),z.innerHTML=ie,G=r(),$=i("ul"),$.innerHTML=re,F=r(),x=i("h3"),x.innerHTML=ue,J=r(),M=i("p"),M.innerHTML=ce,W=r(),L=i("blockquote"),k(q.$$.fragment),X=r(),T=i("h3"),T.innerHTML=me,Y=r(),C=i("p"),C.innerHTML=de,this.h()},l(e){l=u(e,"P",{"data-svelte-h":!0}),d(l)!=="svelte-1czkcr4"&&(l.innerHTML=o),n=c(e),m=u(e,"H2",{"data-svelte-h":!0}),d(m)!=="svelte-uelk9i"&&(m.textContent=h),U=c(e),v=u(e,"OL",{class:!0,"data-svelte-h":!0}),d(v)!=="svelte-ujrgxz"&&(v.innerHTML=le),A=c(e),_=u(e,"P",{"data-svelte-h":!0}),d(_)!=="svelte-1xbnhov"&&(_.textContent=ae),S=c(e),E(f.$$.fragment,e),H=u(e,"BLOCKQUOTE",{});var t=fe(H);E(w.$$.fragment,t),t.forEach(s),B=c(e),j=u(e,"P",{"data-svelte-h":!0}),d(j)!=="svelte-18ag2w0"&&(j.innerHTML=oe),K=c(e),E(g.$$.fragment,e),Q=c(e),y=u(e,"HR",{class:!0}),R=c(e),b=u(e,"H3",{"data-svelte-h":!0}),d(b)!=="svelte-117b6zw"&&(b.innerHTML=ne),V=c(e),z=u(e,"P",{"data-svelte-h":!0}),d(z)!=="svelte-zit418"&&(z.innerHTML=ie),G=c(e),$=u(e,"UL",{class:!0,"data-svelte-h":!0}),d($)!=="svelte-15d9f3r"&&($.innerHTML=re),F=c(e),x=u(e,"H3",{"data-svelte-h":!0}),d(x)!=="svelte-1nl3vp3"&&(x.innerHTML=ue),J=c(e),M=u(e,"P",{"data-svelte-h":!0}),d(M)!=="svelte-p5dsbf"&&(M.innerHTML=ce),W=c(e),L=u(e,"BLOCKQUOTE",{});var P=fe(L);E(q.$$.fragment,P),P.forEach(s),X=c(e),T=u(e,"H3",{"data-svelte-h":!0}),d(T)!=="svelte-42qeul"&&(T.innerHTML=me),Y=c(e),C=u(e,"P",{"data-svelte-h":!0}),d(C)!=="svelte-fvbuwm"&&(C.innerHTML=de),this.h()},h(){ee(v,"class","svelte-1awqwjz"),ee(y,"class","svelte-1awqwjz"),ee($,"class","svelte-1awqwjz")},m(e,t){a(e,l,t),a(e,n,t),a(e,m,t),a(e,U,t),a(e,v,t),a(e,A,t),a(e,_,t),a(e,S,t),I(f,e,t),a(e,H,t),I(w,H,null),a(e,B,t),a(e,j,t),a(e,K,t),I(g,e,t),a(e,Q,t),a(e,y,t),a(e,R,t),a(e,b,t),a(e,V,t),a(e,z,t),a(e,G,t),a(e,$,t),a(e,F,t),a(e,x,t),a(e,J,t),a(e,M,t),a(e,W,t),a(e,L,t),I(q,L,null),a(e,X,t),a(e,T,t),a(e,Y,t),a(e,C,t),Z=!0},p(e,t){const P={};t&1&&(P.$$scope={dirty:t,ctx:e}),f.$set(P);const pe={};t&1&&(pe.$$scope={dirty:t,ctx:e}),w.$set(pe);const ve={};t&1&&(ve.$$scope={dirty:t,ctx:e}),q.$set(ve)},i(e){Z||(O(f.$$.fragment,e),O(w.$$.fragment,e),O(g.$$.fragment,e),O(q.$$.fragment,e),Z=!0)},o(e){D(f.$$.fragment,e),D(w.$$.fragment,e),D(g.$$.fragment,e),D(q.$$.fragment,e),Z=!1},d(e){e&&(s(l),s(n),s(m),s(U),s(v),s(A),s(_),s(S),s(H),s(B),s(j),s(K),s(Q),s(y),s(R),s(b),s(V),s(z),s(G),s($),s(F),s(x),s(J),s(M),s(W),s(L),s(X),s(T),s(Y),s(C)),N(f,e),N(w),N(g,e),N(q)}}}function He(p){let l,o;return l=new be({props:{$$slots:{default:[Ce]},$$scope:{ctx:p}}}),{c(){k(l.$$.fragment)},l(n){E(l.$$.fragment,n)},m(n,m){I(l,n,m),o=!0},p(n,[m]){const h={};m&1&&(h.$$scope={dirty:m,ctx:n}),l.$set(h)},i(n){o||(O(l.$$.fragment,n),o=!0)},o(n){D(l.$$.fragment,n),o=!1},d(n){N(l,n)}}}class Oe extends qe{constructor(l){super(),_e(this,l,null,He,$e,{})}}export{Oe as default};
